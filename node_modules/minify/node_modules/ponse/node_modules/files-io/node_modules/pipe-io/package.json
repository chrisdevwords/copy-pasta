{
  "name": "pipe-io",
  "version": "1.1.0",
  "author": {
    "name": "coderaiser",
    "email": "mnemonic.enemy@gmail.com",
    "url": "https://github.com/coderaiser"
  },
  "description": "Pipe streams and handle events",
  "homepage": "http://github.com/coderaiser/pipe-io",
  "repository": {
    "type": "git",
    "url": "git://github.com/coderaiser/pipe-io.git"
  },
  "dependencies": {
    "util-io": "~1.6.0"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.4.x"
  },
  "main": "./lib/pipe.js",
  "readme": "Pipe-io\n=========\nPipe streams and handle events.\n\n## Install\n\n```\nnpm i pipe-io --save\n```\n\n## API\n\n### pipe\nCreate pipe between streams and add on callback wich would \nhandle any error or will be called when everything done.\n\n```js\n    var pipe        = require('pipe-io'),\n        fs          = require('fs'),\n        NAME        = 'README.md',\n        NAME2       = 'README2.md',\n        readStream  = fs.createReadStream(NAME),\n        writeStream = fs.createWritesStream(NAME2);\n    \n    pipe([readStream, writeStream], function(error) {\n        console.log(error || 'done');\n    });\n```\n\n### getBody\nGet body of readStream\n\n```js\n    var pipe        = require('pipe-io'),\n        fs          = require('fs'),\n        NAME        = 'README.md',\n        readStream  = fs.createReadStream(NAME);\n    \n    pipe.getBody(readStream, function(error, data) {\n        console.log(error || data);\n    });\n```\n\n## License\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/coderaiser/pipe-io/issues"
  },
  "_id": "pipe-io@1.1.0",
  "_from": "pipe-io@~1.1.0"
}
